//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FleetClients.Core.FleetManagerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FleetManagerServiceReference.IFleetManagerService_PublicAPI_v2_0", CallbackContract=typeof(FleetClients.Core.FleetManagerServiceReference.IFleetManagerService_PublicAPI_v2_0Callback))]
    public interface IFleetManagerService_PublicAPI_v2_0 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAPISemVer", ReplyAction="http://tempuri.org/IService/GetAPISemVerResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto> GetAPISemVer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAPISemVer", ReplyAction="http://tempuri.org/IService/GetAPISemVerResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>> GetAPISemVerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/SubscriptionHeartbeat", ReplyAction="http://tempuri.org/ISubscriptionService/SubscriptionHeartbeatResponse")]
        void SubscriptionHeartbeat(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/SubscriptionHeartbeat", ReplyAction="http://tempuri.org/ISubscriptionService/SubscriptionHeartbeatResponse")]
        System.Threading.Tasks.Task SubscriptionHeartbeatAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UnsubscribeHeartbeat", ReplyAction="http://tempuri.org/ISubscriptionService/UnsubscribeHeartbeatResponse")]
        void UnsubscribeHeartbeat(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionService/UnsubscribeHeartbeat", ReplyAction="http://tempuri.org/ISubscriptionService/UnsubscribeHeartbeatResponse")]
        System.Threading.Tasks.Task UnsubscribeHeartbeatAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/GetKingpinDescription", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/GetKingpinDescriptionResponse")]
        GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement> GetKingpinDescription(System.Net.IPAddress ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/GetKingpinDescription", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/GetKingpinDescriptionResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>> GetKingpinDescriptionAsync(System.Net.IPAddress ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetFrozenState", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetFrozenStateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto SetFrozenState(GAAPICommon.Architecture.FrozenState frozenState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetFrozenState", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetFrozenStateResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetFrozenStateAsync(GAAPICommon.Architecture.FrozenState frozenState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/CreateVirtualVehicle", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/CreateVirtualVehicleResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto CreateVirtualVehicle(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/CreateVirtualVehicle", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/CreateVirtualVehicleResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> CreateVirtualVehicleAsync(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/RemoveVehicle", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/RemoveVehicleResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto RemoveVehicle(System.Net.IPAddress ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/RemoveVehicle", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/RemoveVehicleResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> RemoveVehicleAsync(System.Net.IPAddress ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetPose", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetPoseResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto SetPose(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetPose", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetPoseResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetPoseAsync(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetFleetState", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetFleetStateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto SetFleetState(GAAPICommon.Architecture.VehicleControllerState controllerState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetFleetState", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetFleetStateResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetFleetStateAsync(GAAPICommon.Architecture.VehicleControllerState controllerState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetKingpinState", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetKingpinStateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>))]
        GAAPICommon.Core.Dtos.ServiceCallResultDto SetKingpinState(System.Net.IPAddress ipAddress, GAAPICommon.Architecture.VehicleControllerState controllerState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/SetKingpinState", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/SetKingpinStateResponse")]
        System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetKingpinStateAsync(System.Net.IPAddress ipAddress, GAAPICommon.Architecture.VehicleControllerState controllerState);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFleetManagerService_PublicAPI_v2_0Callback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleetManagerService_BaseAPI/OnCallback", ReplyAction="http://tempuri.org/IFleetManagerService_BaseAPI/OnCallbackResponse")]
        void OnCallback(GAAPICommon.Core.Dtos.FleetStateDto callbackObject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFleetManagerService_PublicAPI_v2_0Channel : FleetClients.Core.FleetManagerServiceReference.IFleetManagerService_PublicAPI_v2_0, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FleetManagerService_PublicAPI_v2_0Client : System.ServiceModel.DuplexClientBase<FleetClients.Core.FleetManagerServiceReference.IFleetManagerService_PublicAPI_v2_0>, FleetClients.Core.FleetManagerServiceReference.IFleetManagerService_PublicAPI_v2_0 {
        
        public FleetManagerService_PublicAPI_v2_0Client(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FleetManagerService_PublicAPI_v2_0Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FleetManagerService_PublicAPI_v2_0Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FleetManagerService_PublicAPI_v2_0Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FleetManagerService_PublicAPI_v2_0Client(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto> GetAPISemVer() {
            return base.Channel.GetAPISemVer();
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<GAAPICommon.Core.Dtos.SemVerDto>> GetAPISemVerAsync() {
            return base.Channel.GetAPISemVerAsync();
        }
        
        public void SubscriptionHeartbeat(System.Guid guid) {
            base.Channel.SubscriptionHeartbeat(guid);
        }
        
        public System.Threading.Tasks.Task SubscriptionHeartbeatAsync(System.Guid guid) {
            return base.Channel.SubscriptionHeartbeatAsync(guid);
        }
        
        public void UnsubscribeHeartbeat(System.Guid guid) {
            base.Channel.UnsubscribeHeartbeat(guid);
        }
        
        public System.Threading.Tasks.Task UnsubscribeHeartbeatAsync(System.Guid guid) {
            return base.Channel.UnsubscribeHeartbeatAsync(guid);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement> GetKingpinDescription(System.Net.IPAddress ipAddress) {
            return base.Channel.GetKingpinDescription(ipAddress);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto<System.Xml.Linq.XElement>> GetKingpinDescriptionAsync(System.Net.IPAddress ipAddress) {
            return base.Channel.GetKingpinDescriptionAsync(ipAddress);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto SetFrozenState(GAAPICommon.Architecture.FrozenState frozenState) {
            return base.Channel.SetFrozenState(frozenState);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetFrozenStateAsync(GAAPICommon.Architecture.FrozenState frozenState) {
            return base.Channel.SetFrozenStateAsync(frozenState);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto CreateVirtualVehicle(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose) {
            return base.Channel.CreateVirtualVehicle(ipAddress, pose);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> CreateVirtualVehicleAsync(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose) {
            return base.Channel.CreateVirtualVehicleAsync(ipAddress, pose);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto RemoveVehicle(System.Net.IPAddress ipAddress) {
            return base.Channel.RemoveVehicle(ipAddress);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> RemoveVehicleAsync(System.Net.IPAddress ipAddress) {
            return base.Channel.RemoveVehicleAsync(ipAddress);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto SetPose(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose) {
            return base.Channel.SetPose(ipAddress, pose);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetPoseAsync(System.Net.IPAddress ipAddress, GAAPICommon.Core.Dtos.PoseDto pose) {
            return base.Channel.SetPoseAsync(ipAddress, pose);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto SetFleetState(GAAPICommon.Architecture.VehicleControllerState controllerState) {
            return base.Channel.SetFleetState(controllerState);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetFleetStateAsync(GAAPICommon.Architecture.VehicleControllerState controllerState) {
            return base.Channel.SetFleetStateAsync(controllerState);
        }
        
        public GAAPICommon.Core.Dtos.ServiceCallResultDto SetKingpinState(System.Net.IPAddress ipAddress, GAAPICommon.Architecture.VehicleControllerState controllerState) {
            return base.Channel.SetKingpinState(ipAddress, controllerState);
        }
        
        public System.Threading.Tasks.Task<GAAPICommon.Core.Dtos.ServiceCallResultDto> SetKingpinStateAsync(System.Net.IPAddress ipAddress, GAAPICommon.Architecture.VehicleControllerState controllerState) {
            return base.Channel.SetKingpinStateAsync(ipAddress, controllerState);
        }
    }
}
